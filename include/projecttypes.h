/**
 *  Copyright (C) 2012, BMW AG
 *
 *  \author Christian Mueller, christian.ei.mueller@bmw.de BMW 2011,2012
 *
 *  \copyright
 *  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction,
 *  including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
 *  subject to the following conditions:
 *  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 *  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
 *  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
 *  THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *  \file 
 *  For further information see http://www.genivi.org/.
 *
 * THIS CODE HAS BEEN GENERATED BY ENTERPRISE ARCHITECT GENIVI MODEL. PLEASE CHANGE ONLY IN ENTERPRISE ARCHITECT AND GENERATE AGAIN
 */
#if !defined(EA_E2993ED0_906E_49c8_A444_958D08CA0905__INCLUDED_)
#define EA_E2993ED0_906E_49c8_A444_958D08CA0905__INCLUDED_

namespace am {
	/**
	 * This enum classifies the format in which data is exchanged within a connection.
	 * The enum itself is project specific although there are some Genivi standard
	 * formats defined.
	 * @author Christian Mueller
	 * @created 07-Mar-2012 6:06:17 PM
	 */
	enum am_ConnectionFormat_e
	{
		/**
		 * default
		 */
		CF_UNKNOWN = 0,
		/**
		 * plain mono
		 */
		CF_GENIVI_MONO = 1,
		/**
		 * stereo connection
		 */
		CF_GENIVI_STEREO = 2,
		/**
		 * analog connection
		 */
		CF_GENIVI_ANALOG = 3,
		/**
		 * automatic connection. 
		 */
		CF_GENIVI_AUTO = 4,
		CF_MAX
	};

	/**
	 * This enum gives the information about reason for reason for Source/Sink change
	 * @author Christian Mueller
	 * @created 07-Mar-2012 6:06:17 PM
	 */
	enum am_AvailabilityReason_e
	{
		/**
		 * default
		 */
		AR_UNKNOWN = 0,
		/**
		 * the availability changed because an new media was entered 
		 */
		AR_GENIVI_NEWMEDIA = 1,
		/**
		 * the availability changed because the same media was entered
		 */
		AR_GENIVI_SAMEMEDIA = 2,
		/**
		 * the availability changed because there is no media
		 */
		AR_GENIVI_NOMEDIA = 3,
		/**
		 * the availability changed because of a temperature event
		 */
		AR_GENIVI_TEMPERATURE = 4,
		/**
		 * the availability changed because of a voltage event
		 */
		AR_GENIVI_VOLTAGE = 5,
		/**
		 * the availability changed because of fatal errors reading or accessing media
		 */
		AR_GENIVI_ERRORMEDIA = 6,
		AR_MAX
	};

	/**
	 * product specific identifier of property
	 * @author Christian Mueller
	 * @created 07-Mar-2012 6:06:17 PM
	 */
	enum am_ClassProperty_e
	{
		/**
		 * default
		 */
		CP_UNKNOWN = 0,
		/**
		 * defines the source type of a source. Project specific, could be for example
		 * differentiation between interrupt source and main source.
		 */
		CP_GENIVI_SOURCE_TYPE = 1,
		/**
		 * defines the SINK_TYPE. Project specific
		 */
		CP_GENIVI_SINK_TYPE = 2,
		CP_MAX
	};

	/**
	 * The given ramp types here are just a possiblity. for products, different ramp
	 * types can be defined here.
	 * It is in the responsibility of the product to make sure that the routing
	 * plugins are aware of the ramp types used.
	 * @author Christian Mueller
	 * @created 07-Mar-2012 6:06:17 PM
	 */
	enum am_RampType_e
	{
		RAMP_UNKNOWN = 0,
		/**
		 * this ramp type triggers a direct setting of the value without a ramp
		 */
		RAMP_GENIVI_DIRECT = 1,
		/**
		 * This ramp type will set the volume as fast as possible.  
		 */
		RAMP_GENIVI_NO_PLOP = 2,
		RAMP_GENIVI_EXP_INV = 3,
		RAMP_GENIVI_LINEAR = 4,
		RAMP_GENIVI_EXP = 5,
		RAMP_MAX
	};

	/**
	 * sound properties. Within genivi only the standard properties are defined, for
	 * products these need to be extended.
	 * @author Christian Mueller
	 * @created 07-Mar-2012 6:06:17 PM
	 */
	enum am_SoundPropertyType_e
	{
		/**
		 * default
		 */
		SP_UNKNOWN = 0,
		/**
		 * example treble value min =-10 max =10
		 */
		SP_EXAMPLE_TREBLE = 1,
		/**
		 * example mid value min =-10 max =10
		 */
		SP_EXAMPLE_MID = 2,
		/**
		 * example bass value min =-10 max =10
		 */
		SP_EXAMPLE_BASS = 3,
		SP_MAX
	};

	/**
	 * Here are all SoundProperties that can be set via the CommandInterface. Product
	 * specific
	 * @author Christian Mueller
	 * @created 07-Mar-2012 6:06:17 PM
	 */
	enum am_MainSoundPropertyType_e
	{
		/**
		 * default
		 */
		MSP_UNKNOWN = 0,
		/**
		 * example value between -10 and +10 
		 */
		MSP_EXAMPLE_TREBLE = 1,
		/**
		 * example value between -10 and +10 
		 */
		MSP_EXAMPLE_MID = 2,
		/**
		 * example value between -10 and +10 
		 */
		MSP_EXAMPLE_BASS = 3,
		MSP_MAX
	};

	/**
	 * describes the different system properties. Project specific
	 * @author Christian Mueller
	 * @created 07-Mar-2012 6:06:17 PM
	 */
	enum am_SystemPropertyType_e
	{
		/**
		 * default
		 */
		SYP_UNKNOWN = 0,
		SYP_MAX
	};
}
#endif // !defined(EA_E2993ED0_906E_49c8_A444_958D08CA0905__INCLUDED_)
