***********************************************************************************************************
GENIVI AudioManager
***********************************************************************************************************

Copyright (C) 2012, GENIVI Alliance, Inc.
Copyright (C) 2012, BMW AG

This file is part of GENIVI Project AudioManager.
 
Contributions are licensed to the GENIVI Alliance under one or more
Contribution License Agreements.
 
copyright
This Source Code Form is subject to the terms of the
Mozilla Public License, v. 2.0. If a  copy of the MPL was not distributed with
this file, You can obtain one at http://mozilla.org/MPL/2.0/.
 
author Christian Mueller, christian.ei.mueller@bmw.de BMW 2011,2012

For further information see http://www.genivi.org/.

***********************************************************************************************************
License
***********************************************************************************************************
The licenses of this project are split into two parts:
1) the AudioManagerDaemon, licensed under MPL 2.0
2) all other parts that serve as example code that can be taken to build up an own project with it -
    these parts are licensed with the MIT license
    
Contribution is done under GENIVI CLA. 

***********************************************************************************************************
Version
***********************************************************************************************************
The current version can be taken out of the git. The version 1.0.0 is the first GENIVI compliant code, 
in the compliance statement of discovery (2.0)

***********************************************************************************************************
COMPILE PROGRAMS
***********************************************************************************************************
- compile options with default values:

     CMAKE_BUILD_TYPE                                                                                                                                       
     CMAKE_INSTALL_PREFIX             /usr/local                                                                                                            
     GLIB_DBUS_TYPES_TOLERANT         ON                                                                                                                    
     USE_BUILD_LIBS                   ON                                                                                                                    
     WITH_DBUS_WRAPPER                ON                                                                                                                    
     WITH_DLT                         ON                                                                                                                    
     WITH_DOCUMENTATION               OFF                                                                                                                   
     WITH_MAIN                        ON                                                                                                                    
     WITH_PLUGIN_COMMAND              ON                                                                                                                    
     WITH_PLUGIN_CONTROL              ON                                                                                                                    
     WITH_PLUGIN_ROUTING              ON                                                                                                                    
     WITH_PPOLL                       ON                                                                                                                    
     WITH_TELNET                      ON                                                                                                                    
     WITH_TESTS                       ON 
 

In order to change these options, you can modify this values with ccmake, do the appropriate changes in 
CmakeList.txt or via the commandline for cmake or (when installed via ccmake)

You will need some packages in order to comile the GENIVI AudioManager Daemon, these are:
	-dbus (only when DBUS_WRAPPER==ON) [tested on version 1.2.16]
	-sqlite3 [tested on version 3.6.22]
	-automotive-dlt [greater 2.5.0]                
	-doxygen (only when WITH_DOCUMENTATION==ON) [tested on version 1.6.3]

	to install them in a build environment like Ubuntu you can use:
		sudo apt-get install libdbus-1-dev libsqlite3-dev doxygen git cmake build-essential

For building the tests, you will need the following packages:
	-google mock [tested on version 1.6.0-1] 
	-google test [tested on version 1.6.0]
	-python [tested on version 2.6]

	to install them in a build environment like Ubuntu you can use:
		sudo apt-get install libgtest-dev google-mock python2.6-dev

More details in the CMake Files CmakeList.txt in the projects.

The build was tested on a freshly setup LinuxMint 12 (don't like Unity) with the following steps:
	sudo apt-get update
	sudo apt-get upgrade
	sudo apt-get install libdbus-1-dev libsqlite3-dev doxygen libgtest-dev google-mock git cmake 
	     build-essential python2.6-dev

	git clone https://<kavi-account>:<kavi-password>@git.genivi.org/srv/git/AudioManager

In order to build the project (out of source build), please follow these instructions on the commandline:

	mkdir /build
	cd build
	cmake ..
	make -j4

after the script finished, you should have:

	a bin/ folder which contains all executables and the libraries: 
	a build/ folder which has all build objects (erase that if you need a clean build)
	a doc/ folder in case you turned the documentation on

in order to install the AudioManager, you can do

	sudo make install

package generation is supported via CPack. To build packages, you have to 

	make genivi_package

this will create one package if your CMake version is < 2.8.5 (all binaries stripped):
	
	AudioManager-<git verison>-Linux.deb 

if your version is above, you will get 4 packages (all binaries stripped) :
	
	AudioManager-<git verison>-Linux-bin.deb   		[AudioManager binary]
	AudioManager-<git verison>-Linux-dev.deb   		[header files needed to compile plugins]
	AudioManager-<git verison>-Linux-sampleplugins.deb 	[sample plugins]
	AudioManager-<git verison>-Linux-tests.deb		[tests including tests for sample plugins, 
	       installed in the ~/AudioMAnagerTests]

to create a tar.gz file of all sources (not including .git, build and bin folder,config files), you can do:

	make package_source	

This will create the following package:

	AudioManager-<git verison>-Source.tar.gz

All packages will be placed in a folder called packages

The commandline options of the AudioManager:

	Usage:	AudioManagerDaemon [options]
	options:	
	
    -h: print this message  
    -i: info about current settings     
    -v: print version   
    -V: print DLT logs to stdout    
    -d: daemonize AudioManager  
    -T: DbusType to be used by CAmDbusWrapper (0=DBUS_SESSION[default], 1=DBUS_SYSTEM)  
    -p<path> path for sqlite database (default is in memory)    
    -t<port> port for telnetconnection  
    -m<max> number of max telnetconnections 
    -c<Name> use controllerPlugin <Name> (full path with .so ending)    
    -l<Name> replace command plugin directory with <Name> (full path)   
    -r<Name> replace routing plugin directory with <Name> (full path)   
    -L<Name> add command plugin directory with <Name> (full path)   
    -R<Name> add routing plugin directory with <Name> (full path)   	


***********************************************************************************************************
Telnet Server
***********************************************************************************************************
The audiomanager has a build- in telnetserver that serves for debuggin purposes.
If you compile your AudioManager with TelnetServer support (cmake -DWITH_TELNET=ON), you will be able to 
set with commandline argument -t the port number and with -m the maximum supported connections. 
The default telnet port is 6060. 
   
   For example, launch a telnet session on port 6060:
      telnet localhost 6060
   
      #>Welcome to GENIVI AudioManager ver-0.0.1-37-ga004215
      #>
   
   press 'help' to get a list of all supported commands on this level:
   
      #>help
      ####################################################
      ####### The following commands are supported: ######
      ####################################################
      #
      #exit  - quit telnet session
      #get   - Go into 'get'-submenu
      #help  - show all possible commands
      #info  - Go into 'info'-submenu
      #list  - Go into 'list'-submenu
      #set   - Go into 'set'-submenu
      #
      #\>
   
   Now type one of these commands, for example 'get', followed with another 'help' to get a list of supported commands:
   
      #\>get
      #
      #\Get>help
      ####################################################
      ####### The following commands are supported: ######
      ####################################################
      # 
      #.. - one step back in menu tree (back to root folder)
      #exit  - close telnet session
      #help  - show all possible commands
      #recv  - show receiverversion 
      #routing  - show current routing
      #sendv - show senderversion
      #
      #\Get>
   
   You can also execute several commands in a line:
   
      #\Get>recv sendv .. help exit
      #   Receiver versions:
      #   Ctrl: 1 | Cmd: 1 | Routing: 1
      #   Sender versions:
      #   Ctrl: 1 | Cmd: 1 | Routing: 1
      ####################################################
      ######## The following commands are supported: ######
      ####################################################
      #
      #exit  - quit telnet session
      #get   - Go into 'get'-submenu
      #help  - show all possible commands
      #info  - Go into 'info'-submenu
      #list  - Go into 'list'-submenu
      #set   - Go into 'set'-submenu
      #
      #Your wish is my command ... bye!
      #Connection closed by foreign host.


***********************************************************************************************************
Code Formatting
***********************************************************************************************************
The source code if formatted with eclipse, the style sheet used can be found in the cmake folder:
cmake/AudioManager_Codestyle.xml

***********************************************************************************************************
Working on the code & contribution
***********************************************************************************************************
First get the code from the git:
        git clone https://<kavi-account>:<kavi-password>@git.genivi.org/srv/git/AudioManager

Get an overview of all branches:
        git branch

Switch to the branch you want to work on (see versioning schmeme, the master is the feature branch) 
and verify that it has switched (* changed)
        git checkout <your branch>
        git branch

Best practice is to create a local branch based on the current branch:
        git branch working_branch

Start working, best practice is to commit smaller, compilable peaced during the work that makes it easier to 
handle later on.

If you want to commit you changes, send them to the audiomanager-dev list, you can create a patch like this:
        git format-patch working_branch <your branch>

This creates a set of patches that are published via the mailing list (this is already the submission under CLA). 
The patches will be discussed and then merged & uploaded on the git. For more information about git checkout the 
Genivi wiki and the stuff on the web.


                                 _..-------++._
                             _.-'/ |      _||  \"--._
                       __.--'`._/_\j_____/_||___\    `----.
                  _.--'_____    |          \     _____    /
                _j    /,---.\   |        =o |   /,---.\   |_
               [__]==// .-. \\==`===========/==// .-. \\=[__]
                 `-._|\ `-' /|___\_________/___|\ `-' /|_.'     
                       `---'                     `---'
