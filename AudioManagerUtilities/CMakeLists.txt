# Copyright (C) 2015, ADIT GmbH
#
# This file is part of GENIVI Project AudioManager.
#
# Contributions are licensed to the GENIVI Alliance under one or more
# Contribution License Agreements.
#
# copyright
# This Source Code Form is subject to the terms of the
# Mozilla Public License, v. 2.0. if a  copy of the MPL was not distributed with
# this file, You can obtain one at http://mozilla.org/MPL/2.0/.
#
# author Jens Lorenz, jens.lorenz@de.adit-jv.com ADIT,2015
#
# For further information see http://www.genivi.org/.
#

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)

PROJECT(AudioManagerUtilities)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
SET(INCLUDE_FOLDER "include")

INCLUDE_DIRECTORIES(
	${INCLUDE_FOLDER}
	${AUDIO_INCLUDE_FOLDER}
	${AUDIOMANAGER_INCLUDE_FOLDER}
	${DBUS_INCLUDE_DIRS}
	${TCLAP_INCLUDE_DIR}
)

IF (WITH_SHARED_UTILITIES)
    SET(LIBRARY_TYPE SHARED)
ELSE (WITH_SHARED_UTILITIES)
    SET(LIBRARY_TYPE STATIC)
ENDIF (WITH_SHARED_UTILITIES)

SET(AUDIO_MANAGER_UTILITIES_SRCS_CXX
	src/CAmCommandLineSingleton.cpp
	src/CAmDltWrapper.cpp
	src/CAmSocketHandler.cpp)

IF (WITH_DBUS_WRAPPER)
	pkg_check_modules (DBUS "dbus-1 >= 1.4")
ENDIF (WITH_DBUS_WRAPPER)

IF (WITH_CAPI_WRAPPER)
    FIND_PACKAGE(CommonAPI REQUIRED)
ENDIF (WITH_CAPI_WRAPPER)

IF (WITH_DBUS_WRAPPER)
    SET (AM_LINK_LIBS
        ${AM_LINK_LIBS}
        ${DBUS_LIBRARIES})
	SET(AUDIO_MANAGER_UTILITIES_SRCS_CXX
		${AUDIO_MANAGER_UTILITIES_SRCS_CXX}
		src/CAmDbusWrapper.cpp)
ENDIF (WITH_DBUS_WRAPPER)

IF (WITH_CAPI_WRAPPER)
    SET(AM_LINK_LIBS
        ${AM_LINK_LIBS}
        ${DBUS_LIBRARIES}
        ${COMMON_API_LIBRARIES}
        ${COMMON_API_DBUS_LIBRARIES})
	SET(AUDIO_MANAGER_UTILITIES_SRCS_CXX
		${AUDIO_MANAGER_UTILITIES_SRCS_CXX}
		src/CAmCommonAPIWrapper.cpp)
    INCLUDE_DIRECTORIES(${INCLUDE_DIRECTORIES}
        ${COMMONAPI_INCLUDE_DIRS})
ENDIF (WITH_CAPI_WRAPPER)

ADD_LIBRARY(AudioManagerUtilities ${LIBRARY_TYPE} ${AUDIO_MANAGER_UTILITIES_SRCS_CXX})

TARGET_LINK_LIBRARIES(AudioManagerUtilities ${AM_LINK_LIBS})

IF (WITH_SHARED_UTILITIES)
	INSTALL(TARGETS AudioManagerUtilities
	        LIBRARY DESTINATION lib
	        PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ
	        COMPONENT bin)
ELSE (WITH_SHARED_UTILITIES)
	INSTALL(TARGETS AudioManagerUtilities
	        ARCHIVE DESTINATION lib
	        COMPONENT dev)
ENDIF (WITH_SHARED_UTILITIES)

INSTALL(DIRECTORY "${AUDIOMANAGER_UTILITIES_INCLUDE}/"
        DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${LIB_INSTALL_SUFFIX}
        COMPONENT dev)
