package org.genivi.audiomanager

import org.genivi.audiomanager.am_gen.* from "amTypes.fidl"

interface RoutingSender
{
	version { major 0 minor 1 }
	
	method asyncSetSourceState
	{
		in
		{
			UInt16 handle
			am_sourceID_t sourceID
			am_SourceState_e sourceState
		}
	}
		
	method setDomainState
	{
		in
		{
			am_domainID_t domainID
			am_DomainState_e domainState
		}
		out
		{
			am_Error_e ^error
		}
	}
	method asyncSetSourceVolume
	{
		in
		{
			am_handle_t handle		
			am_sourceID_t sourceID		
			am_volume_t volume									
			am_RampType_e ramp					
			am_time_t time		
		}
	}
	method asyncSetSinkVolume
	{
		in
		{
			am_handle_t handle		
			am_sinkID_t sinkID		
			am_volume_t volume									
			am_RampType_e ramp					
			am_time_t time		
		}
	}
	method asyncConnect
	{
		in
		{
			am_handle_t handle
			am_connectionID_t connectionID
			am_sourceID_t sourceID
			am_sinkID_t sinkID
			am_ConnectionFormat_e connectionFormat
		}
	}
	method asyncDisconnect
	{
		in
		{
			am_handle_t handle
			am_connectionID_t connectionID
		}
	}
	method asyncAbort
	{
		in
		{
			am_handle_t handle
		}
		out
		{
			am_Error_e ^error
		}
	}
	method asyncSetSinkSoundProperties
	{
		in
		{
			am_handle_t handle
			am_sinkID_t sinkID
			am_SoundProperty_L listSoundProperties
		}
	}
	method asyncSetSinkSoundProperty
	{
		in
		{
			am_handle_t handle
			am_sinkID_t sinkID
			am_SoundProperty_s soundProperty
		}
	}
	method asyncSetSourceSoundProperties
	{
		in
		{
			am_handle_t handle
			am_sourceID_t sourceID	
			am_SoundProperty_L listSoundProperties
		}
	}
	method asyncSetSourceSoundProperty
	{
		in
		{
			am_handle_t handle
			am_sourceID_t sourceID	
			am_SoundProperty_s soundProperty
		}

	}
	method asyncCrossFade
	{
		in
		{
			am_handle_t handle
			am_crossfaderID_t crossfaderID	
			am_HotSink_e hotSink
			am_RampType_e rampType
			am_time_t time
		}
	}
	method asyncSetVolumes
	{
		in
		{
			am_handle_t handle
			am_Volumes_l volumes	
		}
	}
	method asyncSetSinkNotificationConfiguration
	{
		in
		{
			am_handle_t handle
			am_sinkID_t sinkID
			am_NotificationConfiguration_s notificationConfiguration	
		}
	}
	method asyncSetSourceNotificationConfiguration
	{
		in
		{
			am_handle_t handle
			am_sourceID_t sourceID
			am_NotificationConfiguration_s notificationConfiguration	
		}
	}
}

